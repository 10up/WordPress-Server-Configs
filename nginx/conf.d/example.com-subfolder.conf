### WordPress subfolder multisite Nginx configuration (no SSL) ###

server {
    listen 80 default_server;
    server_name example.com *.example.com ;
 
	access_log   /var/log/nginx/example.com.access.log;
	error_log    /var/log/nginx/example.com.error.log;
 
	root /var/www/html/example.com;
	index index.php;
 
	if (!-e $request_filename) {
		rewrite /wp-admin$ $scheme://$host$uri/ permanent;	
		rewrite ^(/[^/]+)?(/wp-.*) $2 last;                     
		rewrite ^(/[^/]+)?(/.*\.php) $2 last;                   
	}
 
	location / {
		try_files $uri $uri/ /index.php?$args ;
	}

    # If serving WordPress from a subdirectory, where the 
    # base of your site is /sub/, such as http://example.com/sub/,
    # use the following location block for try_files instead of the
    # one above
    # 
    # location /sub {
    #     try_files $uri $uri/ /sub/index.php?$args;
    # }

    # Microcaching
    #Cache everything by default
    set $no_cache 0;

    #Don't cache logged in users or commenters
    if ( $http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
            set $no_cache 1;
    }

    #Don't cache the following URLs
    if ($request_uri ~* "/(wp-admin/|wp-login.php)")
    {
            set $no_cache 1;
    }
    # /end Microcaching


	location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
 
        include /etc/nginx/fastcgi_params;

        # If using a socket...
        #fastcgi_pass unix:/tmp/php-fpm.sock;
        # If using TCP/IP...
        fastcgi_pass 127.0.0.1:9000;

        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        # Microcaching
        #matches keys_zone in fastcgi_cache_path
        fastcgi_cache my-cache;

        #don't serve pages defined earlier
        fastcgi_cache_bypass $no_cache;

        #don't cache pages defined earlier
        fastcgi_no_cache $no_cache;

        #defines the default cache time
        fastcgi_cache_valid any 60s;

        #unsure what the impacts of this variable is
        fastcgi_max_temp_file_size 2M;

        #Use stale cache items while updating in the background
        fastcgi_cache_use_stale updating error timeout invalid_header http_500;
        fastcgi_cache_lock on;
        fastcgi_cache_lock_timeout 10s;

        add_header X-Cache $upstream_cache_status;
        # /end Microcaching

	}
 
 	# Set expires time for browser caching for media files
	location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
		access_log off;	log_not_found off; expires max;
	}

	# Set expires time for js and css files
    location ~* \.(js|css)$ {
            expires 24h;
            add_header Pragma public;
            add_header Cache-Control "public";
            log_not_found off;
    }
 
 	# Block serving of hidden files
	location ~ /\. { deny  all; access_log off; log_not_found off; }
	
	# This should match upload_max_filesize in php.ini
    client_max_body_size 20M;
}